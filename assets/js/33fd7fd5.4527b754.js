"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6309],{2797:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"Typescript/Variables in TypeScript/3.2 Solution Variables in Typescript","title":"3.2 Solution Variables in Typescript","description":"1. Interactive Challenge / Mini-Project","source":"@site/newdocs/Typescript/3. Variables in TypeScript/3.2 Solution Variables in Typescript.md","sourceDirName":"Typescript/3. Variables in TypeScript","slug":"/Typescript/Variables in TypeScript/3.2 Solution Variables in Typescript","permalink":"/vibe/newdocs/Typescript/Variables in TypeScript/3.2 Solution Variables in Typescript","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Typescript/3. Variables in TypeScript/3.2 Solution Variables in Typescript.md","tags":[],"version":"current","frontMatter":{},"sidebar":"newSidebar","previous":{"title":"Variables in TypeScript","permalink":"/vibe/newdocs/Typescript/Variables in TypeScript/3.1 Variables in Typescript"},"next":{"title":"TypeScript \u2013 let & const","permalink":"/vibe/newdocs/Typescript/let & const/4.1 let & const"}}');var r=i(7968),s=i(4146);const a={},l=void 0,c={},o=[{value:"1. Interactive Challenge / Mini-Project",id:"1-interactive-challenge--mini-project",level:2},{value:"2. Solution &amp; Deep Dive Explanation",id:"2-solution--deep-dive-explanation",level:2}];function p(e){const n={br:"br",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"1-interactive-challenge--mini-project",children:"1. Interactive Challenge / Mini-Project"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Your Turn!"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Declare a variable called  ",(0,r.jsx)(n.code,{children:"city"}),"  and assign it your favorite city as a string."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Declare a variable called  ",(0,r.jsx)(n.code,{children:"temperature"}),"  with type  ",(0,r.jsx)(n.code,{children:"number"}),"  and assign it a value."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a variable called  ",(0,r.jsx)(n.code,{children:"isRaining"}),"  and let TypeScript infer its type from the value you assign."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Write a function called  ",(0,r.jsx)(n.code,{children:"weatherReport"}),"  that takes  ",(0,r.jsx)(n.code,{children:"city"}),",  ",(0,r.jsx)(n.code,{children:"temperature"}),", and  ",(0,r.jsx)(n.code,{children:"isRaining"}),"  as parameters and prints a message like:",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:'"In <city>, it is <temperature>\xb0C. Is it raining? <true/false>"'})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Try calling the function with your variables."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-solution--deep-dive-explanation",children:"2. Solution & Deep Dive Explanation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'\nlet city: string = "Paris";\nlet temperature: number = 22;\nlet isRaining = false; // TypeScript infers boolean\n\nfunction weatherReport(city: string, temperature: number, isRaining: boolean): void {\n  console.log(\n    `In ${city}, it is ${temperature}\xb0C. Is it raining? ${isRaining}`\n  );\n}\n\nweatherReport(city, temperature, isRaining);\n// Output: In Paris, it is 22\xb0C. Is it raining? false\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Explanation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"city"}),"  is explicitly typed as a string."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"temperature"}),"  is a number with an explicit type."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"isRaining"}),"  is assigned a boolean value; TypeScript infers its type automatically."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The function  ",(0,r.jsx)(n.code,{children:"weatherReport"}),"  uses all three variables and prints a formatted message."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"When you call the function with your variables, it outputs a clear weather report."}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},4146:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(4700);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);