"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3882],{4146:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>s});var l=i(4700);const t={},o=l.createContext(t);function r(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(o.Provider,{value:n},e.children)}},4983:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"Typescript/Null vs Undefined/8.2 Solution Null vs Undefined","title":"8.2 Solution Null vs Undefined","description":"1. Interactive Challenge","source":"@site/newdocs/Typescript/8. Null vs Undefined/8.2 Solution Null vs Undefined.md","sourceDirName":"Typescript/8. Null vs Undefined","slug":"/Typescript/Null vs Undefined/8.2 Solution Null vs Undefined","permalink":"/vibe/newdocs/Typescript/Null vs Undefined/8.2 Solution Null vs Undefined","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Typescript/8. Null vs Undefined/8.2 Solution Null vs Undefined.md","tags":[],"version":"current","frontMatter":{},"sidebar":"newSidebar","previous":{"title":"TypeScript \u2013 null vs. undefined","permalink":"/vibe/newdocs/Typescript/Null vs Undefined/8.1 Null vs Undefined"}}');var t=i(7968),o=i(4146);const r={},s=void 0,a={},d=[{value:"1. Interactive Challenge",id:"1-interactive-challenge",level:2},{value:"2. Solution &amp; Deep Dive Explanation",id:"2-solution--deep-dive-explanation",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"1-interactive-challenge",children:"1. Interactive Challenge"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Your Turn!"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Define a type  ",(0,t.jsx)(n.code,{children:"Profile"}),"  with  ",(0,t.jsx)(n.code,{children:"username"}),"  (string),  ",(0,t.jsx)(n.code,{children:"bio"}),"  (string or null), and optional  ",(0,t.jsx)(n.code,{children:"avatarUrl"}),"  (string)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create two profiles: one with a null bio and no avatar, and one with both fields set."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Write a function  ",(0,t.jsx)(n.code,{children:"showProfile"}),"  that prints the username, a default message if bio is null, and a default avatar if  ",(0,t.jsx)(n.code,{children:"avatarUrl"}),"  is undefined."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"2-solution--deep-dive-explanation",children:"2. Solution & Deep Dive Explanation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'type Profile = {\n  username: string;\n  bio: string | null;\n  avatarUrl?: string;\n};\n\nlet profile1: Profile = {\n  username: "coder123",\n  bio: null\n  // avatarUrl is undefined\n};\n\nlet profile2: Profile = {\n  username: "devguru",\n  bio: "Full-stack developer",\n  avatarUrl: "https://example.com/avatar.jpg"\n};\n\nfunction showProfile(profile: Profile): void {\n  const bioText = profile.bio === null ? "No bio provided." : profile.bio;\n  const avatar = profile.avatarUrl ?? "https://example.com/default-avatar.png";\n  console.log(`User: ${profile.username}`);\n  console.log(`Bio: ${bioText}`);\n  console.log(`Avatar: ${avatar}`);\n}\n\nshowProfile(profile1);\n// User: coder123\n// Bio: No bio provided.\n// Avatar: https://example.com/default-avatar.png\n\nshowProfile(profile2);\n// User: devguru\n// Bio: Full-stack developer\n// Avatar: https://example.com/avatar.jpg\n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);